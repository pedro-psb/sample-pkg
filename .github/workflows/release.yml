name: release

on:
  workflow_dispatch:
    inputs:
      semver-type:
        description: 'The type of the release (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  check-test-status:
    name: Check the last test was run succesfully
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Api call
        id: api-result
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Fetching last run on main.yml from gh API"
          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/pedro-psb/sample-pkg/actions/workflows/main.yml/runs \
            > gh-api-call-result
          echo "Done"

          STATUS=$(jq --raw-output '.workflow_runs[0].status' gh-api-call-result)
          COMMIT_SHA=$(jq --raw-output '.workflow_runs[0].head_sha' gh-api-call-result)
          THIS_COMMIT=$(git rev-parse HEAD)

          echo "STATUS=$STATUS"
          echo "COMMIT_SHA=$COMMIT_SHA"
          echo "THIS_COMMIT=$THIS_COMMIT"

          rm gh-api-call-result
          if [ "$STATUS" != "completed" ]; then
            echo "Error: Last CI workflow has not passed yet"
            echo "STATUS $STATUS != completed"
            exit 1
          fi

          if [ $COMMIT_SHA != $THIS_COMMIT ]; then 
            echo "Error: Last passing CI does not refer to the last commit"
            echo "The implementation of this to specify that we mean branch 'main'"
            exit 1
          fi

  build-dist:
    name: Build python distribution
    needs: check-test-status
    runs-on: ubuntu-latest
    steps:
      - name: Build distribution
        run: echo "Building distribution files"
      - name: Generate CHANGELOG
        run: echo "Updating changelog"
      - name: Update version references
        run: echo "Updating version references"
      - name: Create release commit
        run:  echo "Creating release commit"

  publish-pypa:
    name: Publishes to PyPA
    runs-on: ubuntu-latest
    needs: build-dist
    steps:
      - name: "Upload to Pypi"
        run: echo "Uploading to Pypi"
    
  create-gh-release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    needs: build-dist
    steps:
      - name: "Create GH release"
        run: echo "Creating GH release"

          